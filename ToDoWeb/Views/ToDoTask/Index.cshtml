@model ToDoTaskViewModel

<div class="card shadow border-0 my-4 mb-5">
    <div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Task List</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="row pb-3">
            <div class="col-6">
                <a asp-controller="ToDoTask" asp-action="DeleteCompletedTask" class="btn btn-info">
                    <i class="bi bi-eraser-fill"></i> Delete Completed Task
                </a>
            </div>
            <div class="col-6 text-end">
                <a asp-controller="ToDoTask" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i></i> Create New Task
                </a>
            </div>
        </div>
        <div class="mb-3">
            <form method="post" asp-controller="ToDoTask" asp-action="Index">
                <div class="row pb-3 justify-content-end">
                    <div class="col-3">
                        <input name="queryTerm" class="form-control border-1" />
                    </div>
                    <div class="col-3 col-md-1">
                        <button type="submit" class="btn btn-primary form-control">Search</button>
                    </div>
                    </<div>
            </form>
        </div>
        <table class="table table-bordered table-striped" style="width: 100%">
            <thead>
                <tr>
                    <th width="10%">Title</th>
                    <th width="25%">Description</th>
                    <th width="10%">Due Date</th>
                    <th width="5%">Label</th>
                    <th width="5%">Priority</th>
                    <th width="15%">Status</th>
                    <th width="10%">CreatedAt</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var toDoTask in Model.ToDoTasks)
                {
                    <tr>
                        <td>@toDoTask.Title</td>
                        <td >@toDoTask.Description</td>
                        <td>@toDoTask.DueDate</td>
                        <td>@toDoTask.Label.Name</td>
                        <td>@toDoTask.Priority</td>
                        <td>@toDoTask.Status</td>
                        <td>@toDoTask.CreatedAt</td>
                        <td>
                            <div class="w-75 btn-group" role="group">
                                <a asp-controller="ToDoTask" asp-action="Complete" asp-route-id="@toDoTask.Id" class="btn btn-info mx-2">
                                    <i class="bi bi-check2-circle"></i> Complete
                                </a>
                                <a asp-controller="ToDoTask" asp-action="Edit" asp-route-id="@toDoTask.Id" class="btn btn-primary mx-2">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                                <a asp-controller="ToDoTask" asp-action="Delete" asp-route-id="@toDoTask.Id" class="btn btn-danger mx-2">
                                    <i class="bi bi-trash-fill"></i> Delete
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="row mt-4">
            <div class="col-6">
                Showing @Model.StartTaskNumber to @Model.EndTaskNumber of @Model.TotalTasks entries.
            </div>
            <div class="col-6">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-end">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item"><a class="page-link" asp-controller="ToDoTask" asp-action="Index" asp-route-queryTerm="@Model.QueryTerm" asp-route-currentPage="@(Model.CurrentPage - 1)">Previous</a></li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; ++i)
                        {
                            if (i == Model.CurrentPage)
                            {
                                <li class="page-item active"><a class="page-link" asp-controller="ToDoTask" asp-action="Index" asp-route-queryTerm="@Model.QueryTerm" asp-route-currentPage="@i">@i</a></li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" asp-controller="ToDoTask" asp-action="Index" asp-route-queryTerm="@Model.QueryTerm" asp-route-currentPage="@i">@i</a></li>
                            }
                        }
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item"><a class="page-link" asp-controller="ToDoTask" asp-action="Index" asp-route-queryTerm="@Model.QueryTerm" asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a></li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

